import * as constants from './constant';

/*
 * 因为此模块逻辑不是vue组件内的逻辑，
 * 因此需要这样引入invokers模块来访问不同域的服务调用器
 */
import invokers from '../../../invokers';

var KEY_OSP_TOKEN = 'osp-token';

// 获取用户身份
export function fetchAuth(_ref) {
  var commit = _ref.commit;

  var auth = localStorage.getItem(KEY_OSP_TOKEN);
  auth = auth ? JSON.parse(auth) : null;
  commit(constants.FETCH_AUTH, { auth: auth, success: !!auth });
}

// 执行登陆操作
export function doLogin(_ref2, data) {
  var commit = _ref2.commit;

  return new Promise(function (resolve, reject) {
    var s = void 0;
    // 模拟只有admin才能登录!
    if (data.username === 'admin' && data.password === '11' && data.verify.toLowerCase() === 'itzx') {
      s = invokers.services.osp.LOGIN; // 模拟正确登录
    } else {
      s = invokers.services.osp.LOGIN_FAILURE; // 模拟错误登录
    }

    // 调用osp域的远程登录接口
    invokers.domains.osp.post(s, data).then(function (ret) {
      var payload = ret.data;
      if (payload.success) {
        localStorage.setItem(KEY_OSP_TOKEN, JSON.stringify(payload.auth));
        commit(constants.DO_LOGIN, payload);
        resolve();
      } else {
        reject('登录失败！请输入正确的登录信息。');
      }
    }).catch(function (err) {
      reject('\u767B\u5F55\u5931\u8D25\uFF01' + err);
    });
  });
}

// 注销
export function doLogout(_ref3) {
  var commit = _ref3.commit;

  // 调用osp域的远程注销接口
  invokers.domains.osp.post(invokers.services.osp.LOGOUT).then(function (ret) {
    var payload = ret.data;
    if (payload.success) {
      localStorage.removeItem(KEY_OSP_TOKEN);
    }
    commit(constants.DO_LOGOUT, payload);
  });
}